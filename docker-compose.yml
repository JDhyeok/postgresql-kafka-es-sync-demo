version: "3"

services:
  db:
    image: postgres:12.0-alpine
    environment:
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=demo
      - POSTGRES_DB=demo_db
    volumes:
      - ./data/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  pg-admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "demo@test.com"
      PGADMIN_DEFAULT_PASSWORD: "demo123"
    ports:
      - 5050:80

  # elastic:


  zookeeper:
    image: debezium/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    image: debezium/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_EXT://localhost:29092,LISTENER_INT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_LISTENERS=LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
      # KAFKA_BROKER_ID: 1
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafka-connect:
    build: connect
    hostname: kafka-connect
    container_name: kafka-connect
    links:
      - zookeeper
      - kafka
      - db
    ports:
      - '8083:8083'
    environment:
    version: '3.9'

services:
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=arctype

  zookeeper:
    image: debezium/zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    image: debezium/kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_EXT://localhost:29092,LISTENER_INT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_LISTENERS=LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT

  connect:
    image: debezium/connect
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      # CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      # CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # CONNECT_GROUP_ID: compose-connect-group
      # CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      # CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      # CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      # CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      # CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      # CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      # CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_PLUGIN_PATH: /usr/share/java
      # CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      # CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/local/share/jars'
      # CONNECT_REST_HOST_NAME: 0.0.0.0
      # CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      # CONNECT_REST_PORT: 8083

volumes:
  pg_data: